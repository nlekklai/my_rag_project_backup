# utils/ingest_runner.py (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á)
import os, sys
import logging
# ‡πÄ‡∏û‡∏¥‡πà‡∏° root project ‡πÉ‡∏´‡πâ Python ‡∏´‡∏≤ core ‡πÑ‡∏î‡πâ
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from core.ingest import process_document, DATA_DIR, SUPPORTED_TYPES, VECTORSTORE_DIR # ‡πÄ‡∏û‡∏¥‡πà‡∏° VECTORSTORE_DIR

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def ingest_all_documents_recursive():
    """
    Sequential ingestion ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô DATA_DIR
    - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢ (‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢‡πÄ‡∏õ‡πá‡∏ô doc_type)
    - ‡πÉ‡∏ä‡πâ process_document ‡∏à‡∏≤‡∏Å core/ingest.py
    """
    logger.info("üöÄ Starting recursive ingestion for all documents in %s", DATA_DIR)

    if not os.path.exists(DATA_DIR):
        logger.warning("‚ö†Ô∏è DATA_DIR %s does not exist", DATA_DIR)
        return

    # ‡∏™‡πÅ‡∏Å‡∏ô‡∏ó‡∏∏‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢ (Recursive)
    for root, _, files in os.walk(DATA_DIR):
        # 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î doc_type ‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
        # ‡∏ñ‡πâ‡∏≤ root ‡∏Ñ‡∏∑‡∏≠ DATA_DIR ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô doc_type ‡∏´‡∏•‡∏±‡∏Å "document" (‡∏´‡∏£‡∏∑‡∏≠ None)
        if root == DATA_DIR:
            doc_type_folder = None # ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ "document" ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤ default
        else:
            # ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ö DATA_DIR ‡πÄ‡∏õ‡πá‡∏ô doc_type
            doc_type_folder = os.path.basename(root)
            # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: data/rubrics -> doc_type_folder = rubrics

        for f in files:
            ext = os.path.splitext(f)[1].lower()
            if ext in SUPPORTED_TYPES:
                filepath = os.path.join(root, f)
                logger.info("üìÑ Ingesting %s (Type: %s)", filepath, doc_type_folder or "default")
                
                try:
                    # process_document ‡∏à‡∏∞‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö vectorstore ‡πÉ‡∏ô vectorstore/<doc_type_folder>/<doc_id>
                    process_document(
                        file_path=filepath, 
                        file_name=f, 
                        doc_type=doc_type_folder # ‡∏™‡πà‡∏á doc_type ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤
                    )
                except Exception as e:
                    logger.error("‚ùå Error ingesting %s: %s", filepath, str(e))

    logger.info("‚úÖ Recursive ingestion completed.")

if __name__ == "__main__":
    # ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏•‡∏ö vectorstore ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏¥‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î
    import shutil
    if os.path.exists(VECTORSTORE_DIR):
        logger.warning("üóëÔ∏è Deleting existing vectorstore folder: %s", VECTORSTORE_DIR)
        shutil.rmtree(VECTORSTORE_DIR)
    
    ingest_all_documents_recursive()